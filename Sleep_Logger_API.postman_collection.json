{
	"info": {
		"_postman_id": "sleep-logger-api",
		"name": "Sleep Logger API",
		"description": "Collection for testing the Sleep Logger API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "1",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "User Management",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('username');",
									"    pm.expect(jsonData).to.have.property('email');",
									"    ",
									"    // Store user ID for other requests",
									"    pm.collectionVariables.set('userId', jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					}
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('username');",
									"    pm.expect(jsonData).to.have.property('email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					}
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					}
				},
				{
					"name": "Get User by Username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct username\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.eql('testuser');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/by-username/testuser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"by-username",
								"testuser"
							]
						}
					}
				}
			]
		},
		{
			"name": "Sleep Log Management",
			"item": [
				{
					"name": "Create Sleep Log - Today",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has sleep log data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('sleepDate');",
									"    pm.expect(jsonData).to.have.property('bedtime');",
									"    pm.expect(jsonData).to.have.property('wakeTime');",
									"    pm.expect(jsonData).to.have.property('totalTimeInBedMinutes');",
									"    pm.expect(jsonData).to.have.property('morningFeeling');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sleepDate\": \"2025-01-07\",\n    \"bedtime\": \"22:30:00\",\n    \"wakeTime\": \"07:00:00\",\n    \"morningFeeling\": \"GOOD\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/sleep",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"sleep"
							]
						}
					}
				},
				{
					"name": "Create Sleep Log - Yesterday",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sleepDate\": \"2025-01-06\",\n    \"bedtime\": \"23:00:00\",\n    \"wakeTime\": \"08:00:00\",\n    \"morningFeeling\": \"OK\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/sleep",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"sleep"
							]
						}
					}
				},
				{
					"name": "Create Sleep Log - 2 Days Ago",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sleepDate\": \"2025-01-05\",\n    \"bedtime\": \"22:00:00\",\n    \"wakeTime\": \"06:30:00\",\n    \"morningFeeling\": \"BAD\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/sleep",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"sleep"
							]
						}
					}
				},
				{
					"name": "Get Last Night Sleep",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has sleep log data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('sleepDate');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/sleep/last-night",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"sleep",
								"last-night"
							]
						}
					}
				},
				{
					"name": "Get 30-Day Statistics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has statistics data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('dateRange');",
									"    pm.expect(jsonData).to.have.property('averageTotalTimeInBedMinutes');",
									"    pm.expect(jsonData).to.have.property('averageBedtime');",
									"    pm.expect(jsonData).to.have.property('averageWakeTime');",
									"    pm.expect(jsonData).to.have.property('morningFeelingFrequencies');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/sleep/statistics/30-days",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"sleep",
								"statistics",
								"30-days"
							]
						}
					}
				}
			]
		},
		{
			"name": "Error Cases",
			"item": [
				{
					"name": "Create Duplicate Sleep Log",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sleepDate\": \"2025-01-07\",\n    \"bedtime\": \"22:30:00\",\n    \"wakeTime\": \"07:00:00\",\n    \"morningFeeling\": \"GOOD\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/sleep",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"sleep"
							]
						}
					}
				},
				{
					"name": "Get Non-existent User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/99999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"99999"
							]
						}
					}
				},
				{
					"name": "Create Sleep Log for Non-existent User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sleepDate\": \"2025-01-07\",\n    \"bedtime\": \"22:30:00\",\n    \"wakeTime\": \"07:00:00\",\n    \"morningFeeling\": \"GOOD\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/99999/sleep",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"99999",
								"sleep"
							]
						}
					}
				},
				{
					"name": "Create User with Duplicate Username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"duplicate@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					}
				}
			]
		}
	]
}

